Our team (Team three) received Team nine’s project. Team nine’s battleship game was a console-based game written in JavaScript, HTML, and CSS programming languages. We believe that this Team has used the object orientated design paradigm. Their project relates most with the object orientated design paradigm because it will start when the user gives data for the program to use instead of being contained within many separate functions that are not attached to any classes, like they would be if the Team had implemented a function-oriented design paradigm. In addition, they have multiple classes that interact with one another. An example of this can be seen in their project is having their class against local player and against bot java script files call another class named grid load to be able to pull up the different playing grids for each player when it is their turn and is able to store the players or computers ship placements as well as the hits and misses. A similar approach is implemented when the player first picks how many ships they want and the game mode the player would like to play which calls a class named game mode config that configures the variables for the game counters and win condition and removes the configuration buttons to load the selection screen. By using an object orientated design paradigm functions were attached to a class and then accessed when new objects of that particular class were created or as a static method. This design paradigm made sense for the team to use as it better suits object-orientated languages like JavaScript.   
